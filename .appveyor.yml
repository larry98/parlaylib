os: Visual Studio 2019
platform: x64


environment:
  matrix:
    - job_name: Microsoft Visual C++
      compiler: msvc-16-seh
      generator: "Visual Studio 16 2019"
      build_system: cmake
      
    - job_name: MinGW  
      compiler: gcc-8.1.0-posix
      build_system: cmake
      generator: "MinGW Makefiles"
      cxx_path: 'C:\mingw-w64\i686-8.1.0-posix-dwarf-rt_v6-rev0\mingw32\bin'

    - job_name: Cygwin GCC
      CYG_ROOT: C:\cygwin_parlay
      CYG_BASH: C:\cygwin_parlay\bin\bash
      CYG_MIRROR: http://mirrors.kernel.org/sourceware/cygwin/
      CYG_PACKAGES: git,make,gcc-core,gcc-g++,cmake,clang,libiconv-devel,cygwin32-libiconv-1.14-2
    
    - job_name: Cygwin Clang
      CYG_ROOT: C:\cygwin_parlay
      CYG_BASH: C:\cygwin_parlay\bin\bash
      CYG_MIRROR: http://mirrors.kernel.org/sourceware/cygwin/
      CYG_PACKAGES: git,make,gcc-core,gcc-g++,cmake,clang,libiconv-devel,cygwin32-libiconv-1.14-2

    - job_name: WSL GCC
    
    - job_name: WSL Clang

for:
  -
    matrix:
      only:
        - job_name: Microsoft Visual C++
    build_script:
    - ps: |
        md build
        cd build
        cmake -G $env:generator -A x64 -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS_DEBUG=" /bigobj " -DPARLAY_TEST=On ..
        cmake --build .
        ctest -C Debug --no-tests=error
  
  -
    matrix:
      only:  
        - job_name: MinGW
    build_script:
    - ps: |
        md build
        cd build
        $env:path = $env:path.replace("C:\Program Files\Git\usr\bin;", "")
        $env:path += ";$env:cxx_path"
        cmake -G $env:generator -DCMAKE_BUILD_TYPE=Debug -DPARLAY_TEST=On ..
        cmake --build .
        ctest -C Debug --no-tests=error

  -
    matrix:
      only:          
        - job_name: Cygwin GCC
    install:
    - ps: 'Start-FileDownload "https://cygwin.com/setup-x86_64.exe" -FileName "setup-x86_64.exe"'
    - 'setup-x86_64.exe --quiet-mode --no-shortcuts --only-site --root "%CYG_ROOT%" --site "%CYG_MIRROR%" --local-package-dir "%CYG_ROOT%\var\cache\setup" --packages "%CYG_PACKAGES%"'
    build_script:
    - '%CYG_BASH% -lc "cd $APPVEYOR_BUILD_FOLDER; mkdir build"'
    - '%CYG_BASH% -lc "cd $APPVEYOR_BUILD_FOLDER/build; CXX=g++ cmake -DCMAKE_BUILD_TYPE=Debug -DPARLAY_TEST=On .."'
    - '%CYG_BASH% -lc "cd $APPVEYOR_BUILD_FOLDER/build; make"'
    - '%CYG_BASH% -lc "cd $APPVEYOR_BUILD_FOLDER/build; ctest -C Debug --no-tests=error"'

  -
    matrix:
      only:          
        - job_name: Cygwin Clang
    install:
    - ps: 'Start-FileDownload "https://cygwin.com/setup-x86_64.exe" -FileName "setup-x86_64.exe"'
    - 'setup-x86_64.exe --quiet-mode --no-shortcuts --only-site --root "%CYG_ROOT%" --site "%CYG_MIRROR%" --local-package-dir "%CYG_ROOT%\var\cache\setup" --packages "%CYG_PACKAGES%"'
    build_script:
    - '%CYG_BASH% -lc "cd $APPVEYOR_BUILD_FOLDER; mkdir build"'
    - '%CYG_BASH% -lc "cd $APPVEYOR_BUILD_FOLDER/build; CXX=clang++ cmake -DCMAKE_BUILD_TYPE=Debug -DPARLAY_TEST=On .."'
    - '%CYG_BASH% -lc "cd $APPVEYOR_BUILD_FOLDER/build; make"'
    - '%CYG_BASH% -lc "cd $APPVEYOR_BUILD_FOLDER/build; ctest -C Debug --no-tests=error"'
    
  -
    matrix:
      only:          
        - job_name: WSL GCC
    install:
    - ps: |
        wsl
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt-get -qq update
        sudo apt install gcc-9 g++-9
        wget --quiet https://github.com/Kitware/CMake/releases/download/v3.18.2/cmake-3.18.2-Linux-x86_64.tar.gz
        tar -xf cmake-3.18.2-Linux-x86_64.tar.gz
        export CMAKE=$PWD/cmake-3.18.2-Linux-x86_64/bin/cmake
    build_script:
    - ps: |
        wsl
        mkdir build
        cd build
        CC=gcc-9 CXX=g++-9 $CMAKE -DCMAKE_BUILD_TYPE=Debug -DPARLAY_TEST=On ..
        make
        ctest -C Debug --no-tests=error
        
  -
    matrix:
      only:          
        - job_name: WSL Clang
    install:
    - ps: |
        wsl
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        wget --quiet -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        sudo add-apt-repository deb http://apt.llvm.org/focal/ llvm-toolchain-focal-10 main
        sudo apt-get -qq update
        sudo apt install gcc-9 g++-9 clang-10
        wget --quiet https://github.com/Kitware/CMake/releases/download/v3.18.2/cmake-3.18.2-Linux-x86_64.tar.gz
        tar -xf cmake-3.18.2-Linux-x86_64.tar.gz
        export CMAKE=$PWD/cmake-3.18.2-Linux-x86_64/bin/cmake
    build_script:
    - ps: |
        wsl
        mkdir build
        cd build
        CC=clang-10 CXX=clang++-10 $CMAKE -DCMAKE_BUILD_TYPE=Debug -DPARLAY_TEST=On ..
        make
        ctest -C Debug --no-tests=error